{"ast":null,"code":"var _jsxFileName = \"/Users/matthewherrity/spotifyapp/src/App.js\";\nimport React, { Component } from 'react';\nimport * as SpotifyWebApi from 'spotify-web-api-js';\nimport './App.css';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getNowPlaying = () => {\n      console.log(this.token);\n      spotifyApi.getMyCurrentPlaybackState().then(response => {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n        console.log(response);\n        console.log(this.token);\n      });\n    };\n\n    var params = this.getHashParams();\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    };\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.getHashParams = this.getHashParams.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Check Now Playing\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewherrity/spotifyapp/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","App","constructor","getNowPlaying","console","log","token","getMyCurrentPlaybackState","then","response","setState","nowPlaying","name","item","albumArt","album","images","url","params","getHashParams","access_token","setAccessToken","state","loggedIn","bind","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as SpotifyWebApi from 'spotify-web-api-js';\nimport './App.css';\n\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    var params=this.getHashParams()\n    var token = params.access_token;\n  if (token) {\n    spotifyApi.setAccessToken(token);\n  }\n  this.state = {\n    loggedIn: token ? true : false,\n    nowPlaying: { name: 'Not Checked', albumArt: '' }\n  }\n  this.getNowPlaying=this.getNowPlaying.bind(this);\n  this.getHashParams=this.getHashParams.bind(this)\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n  getNowPlaying=()=>{\n    console.log(this.token)\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n            }\n            \n        });\n        console.log(response);\n        console.log(this.token)\n\n      })\n      \n  }\nrender() {\n  return ( \n    <div className='App'>\n      <a href='http://localhost:8888'> Login to Spotify </a>\n      <div>\n        Now Playing: { this.state.nowPlaying.name }\n      </div>\n      <div>\n        <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n      </div>\n      {this.state.loggedIn &&\n        <button onClick={() => this.getNowPlaying()}>\n          Check Now Playing\n        </button>\n      }\n    </div>\n\n  );\n} \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}