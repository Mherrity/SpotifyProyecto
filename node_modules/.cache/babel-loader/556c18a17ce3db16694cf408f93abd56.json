{"ast":null,"code":"var _jsxFileName = \"/Users/matthewherrity/spotifyapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport SpotifyWebApi from 'spotify-web-api-js'; //import { importDefaultSpecifier } from '@babel/types';\n//import { conditionalExpression } from '@babel/types';\n\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getTopArtists = () => {\n      spotifyApi.getMyTopArtists().then(response => {\n        this.setState({\n          images: response.items.map(function (artist) {\n            return {\n              \"Artist\": artist.name,\n              \"Image\": artist.images[0].url,\n              \"ID\": artist.id\n            };\n          })\n        });\n      });\n      console.log(this.state.images);\n    };\n\n    this.getRelatedArtists = ArtistID => {\n      console.log(ArtistID);\n      spotifyApi.getArtistRelatedArtists(ArtistID).then(response => {\n        this.setState({\n          newArtist: !this.state.newArtist,\n          images: response.artists.map(function (artist) {\n            return {\n              \"Artist\": artist.name,\n              \"Image\": artist.images[0].url || 'http://pluspng.com/img-png/spotify-logo-png-open-2000.png',\n              \"ID\": artist.id\n            };\n          })\n        });\n      });\n    };\n\n    var params = this.getHashParams();\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      newArtist: true,\n      images: false\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Login To Spotify \")), React.createElement(\"div\", {\n      className: \"containerParent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.images && this.state.images.map(img => React.createElement(CSSTransition, {\n      in: this.state.newArtist,\n      appear: true,\n      timeout: 1000,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: img.ID,\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      key: img.Name,\n      className: \"circular--portrait\",\n      alt: img.Artist,\n      src: img.Image,\n      onClick: () => this.getRelatedArtists(img.ID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      key: img.Name,\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, img.Artist))))), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getTopArtists(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Get Top Artists\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewherrity/spotifyapp/src/App.js"],"names":["React","Component","CSSTransition","TransitionGroup","SpotifyWebApi","spotifyApi","App","constructor","getTopArtists","getMyTopArtists","then","response","setState","images","items","map","artist","name","url","id","console","log","state","getRelatedArtists","ArtistID","getArtistRelatedArtists","newArtist","artists","params","getHashParams","token","access_token","setAccessToken","loggedIn","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","img","ID","Name","Artist","Image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport SpotifyWebApi from 'spotify-web-api-js';\n//import { importDefaultSpecifier } from '@babel/types';\n//import { conditionalExpression } from '@babel/types';\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    var params = this.getHashParams();\n    var token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      newArtist: true,\n      images: false\n    }\n    \n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n\n  getTopArtists=()=>{\n    spotifyApi.getMyTopArtists()\n    .then((response)=>{ \n      this.setState({\n          images: response.items.map(function (artist) { \n      return {\"Artist\": artist.name, \"Image\": artist.images[0].url, \"ID\": artist.id}\n       }) \n    })\n  })\n  console.log(this.state.images)\n  }\n\ngetRelatedArtists=(ArtistID)=>{\n  console.log(ArtistID)\n  spotifyApi.getArtistRelatedArtists(ArtistID)\n  .then((response)=>{ \n    this.setState({\n        newArtist: !this.state.newArtist,\n        images: response.artists.map(function (artist) { \n    return {\"Artist\": artist.name, \n            \"Image\": artist.images[0].url || 'http://pluspng.com/img-png/spotify-logo-png-open-2000.png', \n            \"ID\": artist.id }\n     }) \n  })\n})\n  \n}\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <a href='http://localhost:8888' > \n        <button>Login To Spotify </button>\n        </a>\n       \n          \n        <div className=\"containerParent\">\n      {this.state.images && this.state.images.map((img) => (\n         <CSSTransition\n         in={this.state.newArtist}\n         appear={true}\n         timeout={1000}\n         classNames=\"fade\"\n         >\n        <div key= {img.ID} className=\"container\">\n        < img key= {img.Name} className=\"circular--portrait\" alt={img.Artist} src = {img.Image} onClick={()=>this.getRelatedArtists(img.ID)} />\n        <div  key= {img.Name} className=\"centered\">{img.Artist}</div>\n         </div>\n        </CSSTransition>\n       \n          ))}\n        </div>\n       \n        { this.state.loggedIn &&\n          <button onClick={() => this.getTopArtists()}>\n            Get Top Artists\n          </button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}