{"ast":null,"code":"var _jsxFileName = \"/Users/matthewherrity/spotifyapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport SpotifyWebApi from 'spotify-web-api-js'; //import { importDefaultSpecifier } from '@babel/types';\n//import { conditionalExpression } from '@babel/types';\n\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getTopArtists = () => {\n      spotifyApi.getMyTopArtists().then(response => {\n        this.setState({\n          images: response.items.map(function (artist) {\n            return {\n              \"Artist\": artist.name,\n              \"Image\": artist.images[0].url,\n              \"ID\": artist.id\n            };\n          })\n        });\n      });\n      console.log(this.state.images);\n    };\n\n    this.getRelatedArtists = ArtistID => {\n      console.log(ArtistID);\n      spotifyApi.getArtistRelatedArtists(ArtistID).then(response => {\n        this.setState({\n          images: response.artists.map(function (artist) {\n            return {\n              \"Artist\": artist.name,\n              \"Image\": artist.images[0].url || 'http://pluspng.com/img-png/spotify-logo-png-open-2000.png',\n              \"ID\": artist.id\n            };\n          })\n        });\n      });\n    };\n\n    this.playMusic = artistID => {\n      spotifyApi.getArtistTopTracks(artistID, \"US\").then(response => {\n        this.state.currentlyPlaying && this.state.currentlyPlaying.pause();\n        this.setState({\n          currentlyPlaying: new Audio(response.tracks[0].preview_url) || null\n        });\n        this.state.currentlyPlaying && this.state.currentlyPlaying.play();\n      });\n    };\n\n    this.SaveTopSong = artistID => {\n      spotifyApi.getArtistTopTracks(artistID, \"US\").then(response => {\n        spotifyAPI.addToMySavedTracks(response.tracks[0].id);\n      });\n    };\n\n    this.stopMusic = () => {\n      this.state.currentlyPlaying && this.state.currentlyPlaying.pause();\n      this.setState({\n        currentlyPlaying: null\n      });\n    };\n\n    var params = this.getHashParams();\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      images: false,\n      currentlyPlaying: null,\n      songDict: {}\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Login To Spotify \")), React.createElement(\"div\", {\n      className: \"containerParent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.images && this.state.images.map(img => React.createElement(\"div\", {\n      key: img.ID,\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      key: img.Name,\n      className: \"circular--portrait\",\n      alt: img.Artist,\n      src: img.Image,\n      onClick: () => this.getRelatedArtists(img.ID),\n      onMouseEnter: () => this.playMusic(img.ID),\n      onMouseOut: () => this.stopMusic(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      key: img.Name,\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, img.Artist), React.createElement(FaPlus, {\n      className: \"green-plus\",\n      size: 35,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })))), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getTopArtists(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Get Top Artists\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewherrity/spotifyapp/src/App.js"],"names":["React","Component","FaPlus","FaMinus","IconContext","SpotifyWebApi","spotifyApi","App","constructor","getTopArtists","getMyTopArtists","then","response","setState","images","items","map","artist","name","url","id","console","log","state","getRelatedArtists","ArtistID","getArtistRelatedArtists","artists","playMusic","artistID","getArtistTopTracks","currentlyPlaying","pause","Audio","tracks","preview_url","play","SaveTopSong","spotifyAPI","addToMySavedTracks","stopMusic","params","getHashParams","token","access_token","setAccessToken","loggedIn","songDict","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","img","ID","Name","Artist","Image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { FaPlus, FaMinus} from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport SpotifyWebApi from 'spotify-web-api-js';\n//import { importDefaultSpecifier } from '@babel/types';\n//import { conditionalExpression } from '@babel/types';\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    var params = this.getHashParams();\n    var token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      images: false,\n      currentlyPlaying: null,\n      songDict:{}\n  \n    }\n    \n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n\n  getTopArtists=()=>{\n    spotifyApi.getMyTopArtists()\n    .then((response)=>{ \n      this.setState({\n          images: response.items.map(function (artist) { \n      return {\"Artist\": artist.name, \"Image\": artist.images[0].url, \"ID\": artist.id}\n       }) \n    })\n  })\n  console.log(this.state.images)\n  }\n\ngetRelatedArtists=(ArtistID)=>{\n  console.log(ArtistID)\n  spotifyApi.getArtistRelatedArtists(ArtistID)\n  .then((response)=>{ \n    this.setState({\n        images: response.artists.map(function (artist) { \n    return {\"Artist\": artist.name, \n            \"Image\": artist.images[0].url || 'http://pluspng.com/img-png/spotify-logo-png-open-2000.png', \n            \"ID\": artist.id }\n     }) \n  })\n}) \n}\n\nplayMusic=(artistID)=>{\n  spotifyApi.getArtistTopTracks(artistID,\"US\")\n  .then((response)=>{ \n    this.state.currentlyPlaying && this.state.currentlyPlaying.pause()\n    this.setState({\n        currentlyPlaying: new Audio(response.tracks[0].preview_url) || null\n     }) \n     this.state.currentlyPlaying && this.state.currentlyPlaying.play()\n  })\n}\n\nSaveTopSong=(artistID)=>{\n  spotifyApi.getArtistTopTracks(artistID,\"US\")\n  .then((response)=>{ \n   spotifyAPI.addToMySavedTracks(response.tracks[0].id) \n     }) \n    \n\n}\n\n\n\nstopMusic=()=>{\n  this.state.currentlyPlaying && this.state.currentlyPlaying.pause()\n  this.setState({\n    currentlyPlaying: null\n }) \n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <a href='http://localhost:8888' > \n        <button>Login To Spotify </button>\n        </a>\n      \n          \n         \n          \n        <div className=\"containerParent\">\n      \n      {this.state.images && this.state.images.map((img) => (\n       \n        <div key= {img.ID} className=\"container\">\n        < img key= {img.Name} \n        className=\"circular--portrait\" \n        alt={img.Artist} \n        src = {img.Image} \n        onClick={()=>this.getRelatedArtists(img.ID)}\n        onMouseEnter={()=>this.playMusic(img.ID)}\n        onMouseOut={()=>this.stopMusic()}\n         />\n\n         \n        <div  key= {img.Name} className=\"centered\">{img.Artist}</div>\n      <FaPlus className='green-plus' size={35}/>\n         </div>\n       \n          ))}\n           \n        </div>\n      \n       \n        { this.state.loggedIn &&\n          <button onClick={() => this.getTopArtists()}>\n            Get Top Artists\n          </button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}