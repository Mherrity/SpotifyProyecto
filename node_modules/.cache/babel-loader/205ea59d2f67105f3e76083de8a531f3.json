{"ast":null,"code":"var _jsxFileName = \"/Users/matthewherrity/spotifyapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js'; //import { conditionalExpression } from '@babel/types';\n\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getTopArtists = () => {\n      spotifyApi.getMyTopArtists().then(response => {\n        this.setState({\n          nowPlaying: {\n            images: response.items.map(function (artist) {\n              return {\n                \"Artist\": artist.name,\n                \"Image\": artist.images[0].url\n              };\n            })\n          }\n        });\n      });\n    };\n\n    var params = this.getHashParams();\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      },\n      images: null\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response.data);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.images && this.images.map(img => React.createElement(\"img\", {\n      alt: img.Artist,\n      src: img.Image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getTopArtists(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Check Now Playing\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewherrity/spotifyapp/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","App","constructor","getTopArtists","getMyTopArtists","then","response","setState","nowPlaying","images","items","map","artist","name","url","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","albumArt","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","console","log","data","item","album","render","img","Artist","Image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\n//import { conditionalExpression } from '@babel/types';\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    var params = this.getHashParams();\n    var token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' },\n      images: null\n    }\n    \n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n\n            }\n        });\n      })\n  }\n\n  getTopArtists=()=>{\n    spotifyApi.getMyTopArtists()\n    .then((response)=>{ \n      this.setState({\n        nowPlaying: { \n          images: response.items.map(function (artist) { \n      return {\"Artist\": artist.name, \"Image\": artist.images[0].url}\n       }) \n    }})\n  })\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n        </div>\n        <div>\n        \n      {this.images && this.images.map((img) => (\n        <img alt={img.Artist} src = {img.Image}/>\n          ))}\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getTopArtists()}>\n            Check Now Playing\n          </button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}