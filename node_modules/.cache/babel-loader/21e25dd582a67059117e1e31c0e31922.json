{"ast":null,"code":"var _jsxFileName = \"/Users/matthewherrity/spotifyapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js'; //import { conditionalExpression } from '@babel/types';\n\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getTopArtists = () => {\n      spotifyApi.getMyTopArtists().then(response => {\n        return response.items.map(function (artist) {\n          return React.createElement(\"img\", {\n            src: artist.images[0].url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          });\n        });\n      });\n    };\n\n    var params = this.getHashParams();\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      },\n      Queue: []\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response.data);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getTopArtists(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Check Now Playing\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewherrity/spotifyapp/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","App","constructor","getTopArtists","getMyTopArtists","then","response","items","map","artist","images","url","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","Queue","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","console","log","data","setState","item","album","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,aAAP,MAA0B,oBAA1B,C,CACA;;AACA,IAAIC,UAAU,GAAG,IAAID,aAAJ,EAAjB;;AAEA,MAAME,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAuCbC,aAvCa,GAuCC,MAAI;AAChBH,MAAAA,UAAU,CAACI,eAAX,GACCC,IADD,CACOC,QAAD,IAAY;AAChB,eAAOA,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmB,UAAUC,MAAV,EAAkB;AAC7C,iBAAO;AAAK,YAAA,GAAG,EAAEA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACE,SAFM,CAAP;AAGD,OALD;AAMD,KA9CY;;AAEX,QAAIC,MAAM,GAAG,KAAKC,aAAL,EAAb;AACA,QAAIC,KAAK,GAAGF,MAAM,CAACG,YAAnB;;AACA,QAAID,KAAJ,EAAW;AACTd,MAAAA,UAAU,CAACgB,cAAX,CAA0BF,KAA1B;AACD;;AACD,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEJ,KAAK,GAAG,IAAH,GAAU,KADd;AAEXK,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OAFD;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMD;;AACDT,EAAAA,aAAa,GAAG;AACd,QAAIU,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;AAEAN,IAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;;AACA,WAAOF,CAAP,EAAU;AACPD,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACAA,MAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;AACF;;AACD,WAAOH,UAAP;AACD;;AAEDU,EAAAA,aAAa,GAAE;AACbjC,IAAAA,UAAU,CAACkC,yBAAX,GACG7B,IADH,CACSC,QAAD,IAAc;AAClB6B,MAAAA,OAAO,CAACC,GAAR,CAAY9B,QAAQ,CAAC+B,IAArB;AACA,WAAKC,QAAL,CAAc;AACZnB,QAAAA,UAAU,EAAE;AACRC,UAAAA,IAAI,EAAEd,QAAQ,CAACiC,IAAT,CAAcnB,IADZ;AAERC,UAAAA,QAAQ,EAAEf,QAAQ,CAACiC,IAAT,CAAcC,KAAd,CAAoB9B,MAApB,CAA2B,CAA3B,EAA8BC;AAFhC;AADA,OAAd;AAMD,KATH;AAUD;;AAeD8B,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACiB,KAAKxB,KAAL,CAAWE,UAAX,CAAsBC,IADvC,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,QAAhC;AAA0C,MAAA,KAAK,EAAE;AAAEqB,QAAAA,MAAM,EAAE;AAAV,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQI,KAAKzB,KAAL,CAAWC,QAAX,IACA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKf,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATJ,CADF;AAgBD;;AAtEyB;;AAyE5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\n//import { conditionalExpression } from '@babel/types';\nvar spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    var params = this.getHashParams();\n    var token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' },\n      Queue: []\n    }\n    \n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n            }\n        });\n      })\n  }\n\n  getTopArtists=()=>{\n    spotifyApi.getMyTopArtists()\n    .then((response)=>{ \n      return response.items.map(function (artist) { \n     return <img src={artist.images[0].url}/>\n      })\n    })\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getTopArtists()}>\n            Check Now Playing\n          </button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}